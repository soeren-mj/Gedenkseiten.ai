import React from 'react';
import { cn } from '@/lib/utils';

interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {
  label?: string;
  error?: string;
}

const Input: React.FC<InputProps> = ({
  label,
  error,
  className,
  id,
  name,
  ...props
}) => {
  return (
    <div className={cn('w-full', className)}>
      {label && (
        <label 
          className="block text-sm font-medium text-foreground-primary dark:text-foreground-primary mb-1 pl-1" 
          htmlFor={id || name}
        >
          {label}
        </label>
      )}
      <input
        id={id || name}
        name={name}
        {...props}
        className={cn(
          "w-full rounded-xxs border px-3 py-2 transition",
          "bg-background-bw dark:bg-background-secondary",
          "text-foreground-primary dark:text-foreground-primary",
          "border-border-main dark:border-neutral-600",
          "placeholder-foreground-tertiary dark:placeholder-foreground-tertiary",
          "focus:outline-none focus:ring-2",
          "focus:ring-background-interactive-primary-default dark:focus:ring-background-interactive-primary-default",
          "focus:border-background-interactive-primary-default dark:focus:border-background-interactive-primary-default",
          "disabled:bg-background-secondary dark:disabled:bg-background-tertiary",
          "disabled:text-foreground-interactive-disabled dark:disabled:text-foreground-interactive-disabled",
          "disabled:cursor-not-allowed"
        )}
      />
      {error && (
        <p className="mt-1 text-xs text-background-interactive-error-default dark:text-background-interactive-error-default">
          {error}
        </p>
      )}
    </div>
  );
};

export { Input };
export default Input; 