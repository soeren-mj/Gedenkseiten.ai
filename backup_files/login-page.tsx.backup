'use client'

import { useState } from 'react'
import { useRouter, useSearchParams } from 'next/navigation'
import { createClient } from '@/lib/supabase/client'
import { Button } from '@/components/ui/Button'
import Link from 'next/link'

export default function LoginPage() {
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState<string | null>(null)
  const router = useRouter()
  const searchParams = useSearchParams()
  const supabase = createClient()

  const handleOAuthSignIn = async (provider: 'google' | 'apple' | 'azure') => {
    try {
      setLoading(true)
      setError(null)

      const { data, error } = await supabase.auth.signInWithOAuth({
        provider,
        options: {
          redirectTo: `${window.location.origin}/auth/callback`,
        },
      })

      if (error) {
        setError('Anmeldung fehlgeschlagen. Bitte versuchen Sie es erneut.')
        return
      }

      if (data.url) {
        window.location.href = data.url
      }
    } catch {
      setError('Ein unerwarteter Fehler ist aufgetreten.')
    } finally {
      setLoading(false)
    }
  }

  const handleEmailSignIn = () => {
    router.push('/auth/login/email')
  }

  // Check for auth errors from callback
  const authError = searchParams.get('error')

  return (
    <div className="min-h-screen bg-background-primary flex items-center justify-center p-4">
      <div className="w-full max-w-md">
        {/* Main Card */}
        <div className="bg-background-bw rounded-lg shadow-lg p-8 border border-border-subtle">
          {/* Header */}
          <div className="text-center mb-8">
            <h1 className="text-desktop-h2 font-semibold text-foreground-primary mb-2">
              Deine Wahl.
            </h1>
            <p className="text-desktop-body-m text-foreground-secondary">
              Erstelle dein persönliches Memorial Journey Konto
            </p>
          </div>

          {/* Error Message */}
          {(error || authError) && (
            <div className="mb-6 p-4 bg-background-interactive-error-subtle border border-border-error rounded-xs">
              <p className="text-desktop-body-s text-foreground-error">
                {error || 'Anmeldung fehlgeschlagen. Bitte versuchen Sie es erneut.'}
              </p>
            </div>
          )}

          {/* Social Login Buttons */}
          <div className="space-y-3 mb-6">
            {/* Google */}
            <Button
              variant="secondary"
              size="lg"
              fullWidth
              onClick={() => handleOAuthSignIn('google')}
              disabled={loading}
              leftIcon={
                <svg className="w-5 h-5" viewBox="0 0 24 24">
                  <path
                    fill="currentColor"
                    d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"
                  />
                  <path
                    fill="currentColor"
                    d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"
                  />
                  <path
                    fill="currentColor"
                    d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"
                  />
                  <path
                    fill="currentColor"
                    d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"
                  />
                </svg>
              }
            >
              Mit Google anmelden
            </Button>

            {/* Apple */}
            <Button
              variant="secondary"
              size="lg"
              fullWidth
              onClick={() => handleOAuthSignIn('apple')}
              disabled={loading}
              leftIcon={
                <svg className="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M12.017 6.565c1.04-1.287 1.739-3.064 1.55-4.865-1.495.06-3.303.996-4.372 2.253-.967.112-1.957 1.287-1.768 3.06 1.88.149 3.8-.907 4.59-2.448zm4.516 1.784c-2.507-.149-4.651 1.396-5.844 1.396-1.194 0-3.034-1.367-4.993-1.319-2.567.04-4.939 1.49-6.266 3.795-2.666 4.651-.687 11.532 1.918 15.297 1.276 1.84 2.789 3.916 4.788 3.839 1.938-.077 2.686-1.255 5.043-1.255 2.357 0 3.067 1.255 5.162 1.216 2.13-.04 3.434-1.84 4.71-3.679 1.474-2.13 2.081-4.2 2.12-4.305-.04-.04-4.086-1.565-4.125-6.203-.04-3.876 3.163-5.723 3.303-5.802-1.798-2.626-4.59-2.98-5.586-2.98z"/>
                </svg>
              }
            >
              Mit Apple anmelden
            </Button>

            {/* Microsoft */}
            <Button
              variant="secondary"
              size="lg"
              fullWidth
              onClick={() => handleOAuthSignIn('azure')}
              disabled={loading}
              leftIcon={
                <svg className="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M0 0h11v11H0V0zm13 0h11v11H13V0zM0 13h11v11H0V13zm13 0h11v11H13V13z"/>
                </svg>
              }
            >
              Mit Microsoft anmelden
            </Button>

            {/* Passkey - Disabled */}
            <Button
              variant="secondary"
              size="lg"
              fullWidth
              disabled={true}
              leftIcon={
                <svg className="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M12.65 10A5.99 5.99 0 0 0 7 4a6 6 0 0 0-6 6c0 1.54.58 2.94 1.53 4A5.98 5.98 0 0 0 7 16a5.99 5.99 0 0 0 5.65-4H17l2 2 2-2 2 2 1.5-1.5L21 9h-8.35zM7 13a3 3 0 1 1 0-6 3 3 0 0 1 0 6z"/>
                </svg>
              }
            >
              Mit Passkey anmelden (Bald verfügbar)
            </Button>
          </div>

          {/* Divider */}
          <div className="relative mb-6">
            <div className="absolute inset-0 flex items-center">
              <div className="w-full border-t border-border-subtle" />
            </div>
            <div className="relative flex justify-center text-desktop-body-s">
              <span className="bg-background-bw px-4 text-foreground-tertiary">oder</span>
            </div>
          </div>

          {/* Email Option */}
          <Button
            variant="tertiary"
            size="lg"
            fullWidth
            onClick={handleEmailSignIn}
            disabled={loading}
          >
            Mit E-Mail anmelden
          </Button>

          {/* Legal Text */}
          <div className="mt-8 text-center">
            <p className="text-desktop-body-xs text-foreground-tertiary">
              Mit der Anmeldung stimmen Sie unseren{' '}
              <Link 
                href="/agb" 
                className="text-background-interactive-primary-default hover:underline"
              >
                AGB
              </Link>{' '}
              und der{' '}
              <Link 
                href="/datenschutz" 
                className="text-background-interactive-primary-default hover:underline"
              >
                Datenschutzerklärung
              </Link>{' '}
              zu.
            </p>
          </div>

          {/* Login Link */}
          <div className="mt-4 text-center">
            <p className="text-desktop-body-s text-foreground-secondary">
              Bereits ein Konto?{' '}
              <Link 
                href="/auth/login" 
                className="text-background-interactive-primary-default hover:underline font-medium"
              >
                Einloggen
              </Link>
            </p>
          </div>
        </div>
      </div>
    </div>
  )
}