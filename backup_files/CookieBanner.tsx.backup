'use client';

import { useState, useEffect } from 'react';
import Button from '@/components/ui/Button';
import { Switch } from '@/components/ui/switch';

interface CookieConsent {
  analytics: boolean;
  necessary: boolean;
}

const defaultConsent: CookieConsent = {
  analytics: false,
  necessary: true,
};

declare global {
  interface Window {
    dataLayer: Array<Record<string, unknown>>;
  }
}


export function CookieBanner() {
  const [showBanner, setShowBanner] = useState(false);
  const [consent, setConsent] = useState<CookieConsent>(defaultConsent);

  useEffect(() => {
    const savedConsent = localStorage.getItem('cookie-consent');
    if (!savedConsent) {
      setShowBanner(true);
    }
  }, []);

  // Analytics Switch Handler
  const handleAnalyticsSwitch = (checked: boolean) => {
    setConsent((prev) => {
      const updated = { ...prev, analytics: checked };
      localStorage.setItem('cookie-consent', JSON.stringify(updated));
      if (checked && typeof window !== 'undefined' && window.dataLayer) {
        window.dataLayer.push({ event: 'analytics_consent_granted' });
      }
      return updated;
    });
  };

  // Weiter ohne Zustimmung
  const handleDecline = () => {
    const onlyNecessary: CookieConsent = { analytics: false, necessary: true };
    setConsent(onlyNecessary);
    localStorage.setItem('cookie-consent', JSON.stringify(onlyNecessary));
    setShowBanner(false);
  };

  // Zustimmen
  const handleAccept = () => {
    const fullConsent: CookieConsent = { analytics: true, necessary: true };
    setConsent(fullConsent);
    localStorage.setItem('cookie-consent', JSON.stringify(fullConsent));
    setShowBanner(false);
    if (typeof window !== 'undefined' && window.dataLayer) {
      window.dataLayer.push({ event: 'analytics_consent_granted' });
    }
  };

  if (!showBanner) return null;

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center">
      <div
        className="max-w-[611px] p-3 rounded-lg backdrop-blur-xl"
        style={{ boxShadow: '0 8px 16px 0 rgba(0, 0, 0, 0.1)' }}
      >
        <div
        className="rounded-[1rem] overflow-hidden p-3 bg-background-primary inline-flex flex-col justify-start items-start gap-6"
      >
        {/* Weiter ohne Zustimmung */}
        <button
          onClick={handleDecline}
          className="justify-center p-1 text-foreground-secondary text-xs tracking-tight hover:text-foreground-primary transition-colors"
        >
          Weiter ohne Zustimmung
        </button>
        {/* Haupttext */}
        <div className="self-stretch justify-center text-foreground-primary">
          <h5> Herzlich Willkommen, wir verwenden Cookies, um deine Erfahrung auf unserer Website zu verbessern. Einige sind technisch notwendig, andere helfen uns, die Website zu optimieren.</h5>
        </div>
        <div>
        {/* Notwendige Cookies */}
        <div className="w-full max-w-[825px] min-w-72 inline-flex justify-between items-center">
          <div>
            <div className="self-stretch justify-center text-foreground-primary text-sm font-semibold font-['Inter'] leading-[1.75rem]">Notwendige Cookies</div>
            <div className="self-stretch justify-center text-foreground-secondary text-xs">Essentiell damit die Seiten funktionieren. Immer an.</div>
          </div>
          <Switch checked={true} onCheckedChange={() => {}} disabled variant="cookie" />
        </div>
        {/* Analyse Cookies */}
        <div className="w-full pt-4 max-w-[825px] min-w-72 inline-flex justify-between items-center">
          <div>
            <div className="self-stretch justify-center text-foreground-primary text-sm font-semibold font-['Inter'] leading-[1.75rem]">Analyse Cookies</div>
            <div className="self-stretch justify-center text-foreground-secondary text-xs">Werden zur Messung der Nutzung erhoben, <br />um das Erlebnis zu verbessern.</div>
          </div>
          <Switch checked={consent.analytics} onCheckedChange={handleAnalyticsSwitch} variant="cookie" />
        </div>
        </div>
        {/* Zustimmen Button */}
        <div className="w-full flex pt-6 justify-center"> 
        <Button
          onClick={handleAccept}
          size="md"
        >
          Zustimmen
        </Button>
        </div>
      </div>
      </div>
    </div>
  );
} 